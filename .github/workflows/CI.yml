name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels in Manylinux Docker Container
        run: |
          docker run --rm -v ${{ github.workspace }}:/io ghcr.io/pyo3/maturin build --release --manifest-path /io/Cargo.toml -i python3.10 --out io/dist --manylinux off
        env:
          SCCACHE: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./io/dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels
        run: |
          maturin build --release --out dist --find-interpreter
        env:
          SCCACHE: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels
        run: |
          maturin build --release --out dist --find-interpreter
        env:
          SCCACHE: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install maturin
        run: pip install maturin

      - name: Build sdist
        run: |
          maturin sdist --out dist
          
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: ./dist
  release:
    needs: [linux, windows, macos, sdist]
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Wheels to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/wheels
          asset_name: ascvd_wheels.zip
          asset_content_type: application/zip
          
      - name: Upload sdist to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/sdist
          asset_name: ascvd_sdist.tar.gz
          asset_content_type: application/gzip

  publish-to-pypi:
    needs: [linux, windows, macos, sdist]  # Ensure these are your build jobs
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install twine
        run: pip install twine

      - name: Download wheels and sdist
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish to PyPI
        run: twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}


  publish-to-github:
    needs: [linux, windows, macos, sdist] # Update this based on your existing jobs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Download wheels and sdist
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Get version from your version file
        id: version
        # Update the working-directory and command to extract version from your project's version file
        run: |
          # Example for extracting version from a Python file
          VERSION=$(python setup.py --version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        id: github-release
        uses: release-drafter/release-drafter@v5
        with:
          # Update these details according to your project
          name: Your Project ${{ steps.version.outputs.version }}
          tag: v${{ steps.version.outputs.version }}
          version: ${{ steps.version.outputs.version }}
          commitish: ${{ github.sha }}
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets to GitHub release
        run: gh release upload $TAG $FILES --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.github-release.outputs.tag_name }}
          FILES: dist/*

      - name: Publish GitHub release
        run: gh release edit $TAG --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.github-release.outputs.tag_name }}
